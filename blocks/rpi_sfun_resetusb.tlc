%% File : rpi_sfun_resetusb.tlc
%% Created : Wed Feb 05 14:05:05 2020
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "rpi_sfun_resetusb.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  rpi_sfun_resetusb "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void rpi_sfun_resetusb_Start_wrapper(const real_T *rpi_Ts, const int_T p_width0);

    extern void rpi_sfun_resetusb_Outputs_wrapper(real_T *err,
			const real_T *rpi_Ts, const int_T p_width0);

    extern void rpi_sfun_resetusb_Terminate_wrapper(const real_T *rpi_Ts, const int_T p_width0);

    #ifdef __cplusplus
    }
    #endif
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Start ============================================================
%%
%function Start(block, system) Output
   /* %<Type> Block: %<Name> */
  %assign nelements1 = LibBlockParameterSize(P1)
  %assign param_width1 = nelements1[0] * nelements1[1]
  %if (param_width1) > 1
    %assign pp1 = LibBlockMatrixParameterBaseAddr(P1)
  %else
    %assign pp1 = LibBlockParameterAddr(P1, "", "", 0)
  %endif
  rpi_sfun_resetusb_Start_wrapper(%<pp1>, %<param_width1>);
%endfunction
%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign nelements1 = LibBlockParameterSize(P1)
  %assign param_width1 = nelements1[0] * nelements1[1]
  %if (param_width1) > 1
    %assign pp1 = LibBlockMatrixParameterBaseAddr(P1)
  %else
    %assign pp1 = LibBlockParameterAddr(P1, "", "", 0)
  %endif
  rpi_sfun_resetusb_Outputs_wrapper(%<py0>, %<pp1>, %<param_width1>);
  %%
%endfunction


%% [EOF] rpi_sfun_resetusb.tlc

