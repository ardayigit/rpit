%% File : sfun_OSEK_.tlc
%% Created: Fri Jun 18 14:43:26 2010
%%
%% Description: 
%%   Real-Time Workshop wrapper functions interface generated for 
%%   S-function "sfun_OSEK_noisesensor.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Real-Time Workshop, see the Target Language Compiler manual
%%   (under Real-Time Workshop) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  sfun_OSEK_noisesensor "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile buffer
  #include "ecrobot_hooks.h"
  %closefile buffer
  %<LibCacheExtern(buffer)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign nelements1 = LibBlockParameterSize(P1)
  %assign param_width1 = nelements1[0] * nelements1[1]
  %if (param_width1) > 1
     %assign pp1 = LibBlockMatrixParameterBaseAddr(P1)
   %else
     %assign pp1 = LibBlockParameterAddr(P1, "", "", 0)
   %endif
  %assign py_width = LibBlockOutputSignalWidth(0)
  switch((int)*%<pp1>) {
	  case 1:
		  *%<py0> = ecrobot_get_sound_sensor(NXT_PORT_S1);
		  break;
	  case 2:
		  *%<py0> = ecrobot_get_sound_sensor(NXT_PORT_S2);
		  break;
	  case 3:
		  *%<py0> = ecrobot_get_sound_sensor(NXT_PORT_S3);
		  break;
	  default:
		  *%<py0> = ecrobot_get_sound_sensor(NXT_PORT_S4);
		  break;
    }
    *%<py0> = ((*%<py0>*(-1))+1023);
  %%
%endfunction


%% [EOF] sfun_OSEK_noisesensor.tlc





